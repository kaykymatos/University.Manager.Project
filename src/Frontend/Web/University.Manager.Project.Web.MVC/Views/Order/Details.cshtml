@model University.Manager.Project.Web.MVC.Models.OrderViewModel

@{
    var studets = ViewBag.Students as IEnumerable<StudentViewModel>;
    static string VerifyAttatchmentType(string? base64String)
    {
        if (string.IsNullOrWhiteSpace(base64String))
            return "application/octet-stream";
        var data = base64String.Substring(0, 5);
        switch (data.ToUpper())
        {
            case "IVBOR":
                return "image/png";
            case "/9J/4":
                return "image/jpeg";
            case "AAAAF":
                return "video/mp4";
            case "JVBER":
                return "application/pdf";
            case "AAABA":
                return "image/x-icon";
            case "UMFYI":
                return "application/x-rar-compressed";
            case "E1XYD":
                return "application/rtf";
            case "U1PKC":
                return "text/plain";
            case "MQOWM":
            case "77U/M":
                return "text/plain"; // Por exemplo, legendas de vídeo (srt)
            default:
                return string.Empty;
        }

    }
    ViewData["Title"] = "Details";
}

<h1>Details</h1>


<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Id
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            Creation Data
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreationData)
        </dd>
        <dt class="col-sm-2">
            Updated Data
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UpdatedData)
        </dd>
        <dt class="col-sm-2">
            Title
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            Message
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Message)
        </dd>
        <dt class="col-sm-2">
            Attachment
        </dt>
        <dd class="col-sm-10">
            <img width="100%" src="data:@VerifyAttatchmentType(Model.Attachment);base64,@Model.Attachment" alt="Img Attachment" /
        </dd>
        <dt class="col-sm-2">
            Order Type
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OrderType)
        </dd>
        <dt class="col-sm-2">
           Student
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(studets.FirstOrDefault(x => x.Id == Model.UserId).Name)
        </dd>
    </dl>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

